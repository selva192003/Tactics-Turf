version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: tactics_turf_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: tactics_turf
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - tactics_turf_network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: tactics_turf_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - tactics_turf_network

  # Backend Application
  backend:
    build: .
    container_name: tactics_turf_backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/tactics_turf?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-here-make-it-long-and-random
      JWT_REFRESH_SECRET: your-super-secret-refresh-jwt-key-here
      SPORTS_API_KEY: your-sports-api-key
      STRIPE_SECRET_KEY: sk_test_your_stripe_secret_key
      RAZORPAY_KEY_ID: your_razorpay_key_id
      RAZORPAY_KEY_SECRET: your_razorpay_key_secret
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - .:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - tactics_turf_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Express (Admin UI)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: tactics_turf_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - tactics_turf_network

  # Redis Commander (Admin UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: tactics_turf_redis_commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - tactics_turf_network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: tactics_turf_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - tactics_turf_network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  tactics_turf_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
